{{ if .Values.scheduledScaling.enabled }}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: scaling-service-account
  namespace: {{ .Release.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: scaling-role
  namespace: {{ .Release.Namespace }}
rules:
- apiGroups: ["apps"] # API group for Deployments
  resources: 
  - "deployments"
  - "deployments/scale"
  verbs:
  - "get"
  - "list"
  - "watch"
  - "patch"
  - "update"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: scaling-role-binding
  namespace: {{ .Release.Namespace }}
subjects:
- kind: ServiceAccount
  name: scaling-service-account
  namespace: {{ .Release.Namespace }}
roleRef:
  kind: Role
  name: scaling-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: scaling-deployment
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: scaling
  template:
    metadata:
      labels:
        app: scaling
    spec:
      serviceAccountName: scaling-service-account
      containers:
      - name: scaler
        image: us-east1-docker.pkg.dev/dv01-prj-shared-art-reg-6j49/dv01-shared-art-reg-01/scaling-sandbox:v1
        command:
        - /bin/sh
        - -c
        - |
          echo 123
          sleep 1
          echo 456
          sleep 1
          kubectl version
          sleep 1
          node -e '
          for (let i = 0; i < 100; i++) {
            console.log("Hello, world!");
          }
          '
          sleep 100

{{- end }}