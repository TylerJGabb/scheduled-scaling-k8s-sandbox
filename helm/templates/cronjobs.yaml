apiVersion: v1
kind: ServiceAccount
metadata:
  name: scaling-service-account
  namespace: {{ .Release.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: scaling-role
  namespace: {{ .Release.Namespace }}
rules:
- apiGroups: ["apps"] # API group for Deployments
  resources: 
  - "deployments"
  - "deployments/scale"
  verbs:
  - "get"
  - "list"
  - "watch"
  - "patch"
  - "update"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: scaling-role-binding
  namespace: {{ .Release.Namespace }}
subjects:
- kind: ServiceAccount
  name: scaling-service-account
  namespace: {{ .Release.Namespace }}
roleRef:
  kind: Role
  name: scaling-role
  apiGroup: rbac.authorization.k8s.io
---
{{- $scheduledScaling := fromJson .Values.scheduledScaling }}
{{- range $scheduledScaling.schedules }}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ .name | lower | replace " " "-" | replace "_" "-" }}
  namespace: {{ $.Release.Namespace}}
spec:
  concurrencyPolicy: Replace
  schedule: "{{ .cron }}"
  timeZone: America/New_York
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          serviceAccountName: scaling-service-account
          containers:
          - name: scaler
            image: bitnami/kubectl:latest
            command:
            - /bin/sh
            - -c
            - kubectl scale deployment -n {{ $.Release.Namespace }} {{ $.Values.name }}-deploy --replicas={{ .replicas }}
---
{{- end }}